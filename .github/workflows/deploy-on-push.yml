name: Deploy on Push to Main

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.github/**'
      - 'infrastructure/**.md'

permissions:
  id-token: write
  contents: read

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://dev.digstationlabs.com
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install infrastructure dependencies
        working-directory: ./infrastructure
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::529370324189:role/GitHubActionsRole
          aws-region: us-east-1

      - name: Deploy to AWS Dev
        working-directory: ./infrastructure
        run: npm run deploy-dev

      - name: Get CloudFront Distribution ID
        id: get-distribution
        run: |
          DISTRIBUTION_ID=$(aws cloudformation describe-stacks \
            --stack-name DigstationLabsHome-dev \
            --query "Stacks[0].Outputs[?OutputKey=='DistributionId'].OutputValue" \
            --output text)
          echo "distribution_id=$DISTRIBUTION_ID" >> $GITHUB_OUTPUT

      - name: Invalidate CloudFront cache
        if: steps.get-distribution.outputs.distribution_id != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.get-distribution.outputs.distribution_id }} \
            --paths "/*"

  deploy-prod:
    needs: deploy-dev
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
      url: https://digstationlabs.com
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install infrastructure dependencies
        working-directory: ./infrastructure
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::529370324189:role/GitHubActionsRole
          aws-region: us-east-1

      - name: Deploy to AWS Prod
        working-directory: ./infrastructure
        run: npm run deploy-prod

      - name: Get CloudFront Distribution ID
        id: get-distribution
        run: |
          DISTRIBUTION_ID=$(aws cloudformation describe-stacks \
            --stack-name DigstationLabsHome-prod \
            --query "Stacks[0].Outputs[?OutputKey=='DistributionId'].OutputValue" \
            --output text)
          echo "distribution_id=$DISTRIBUTION_ID" >> $GITHUB_OUTPUT

      - name: Invalidate CloudFront cache
        if: steps.get-distribution.outputs.distribution_id != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.get-distribution.outputs.distribution_id }} \
            --paths "/*"